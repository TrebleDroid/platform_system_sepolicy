###
### Supplemental Process.
###
### This file defines the security policy for the supplemental process.

type supplemental_process, domain;

typeattribute supplemental_process coredomain;

net_domain(supplemental_process)
app_domain(supplemental_process)

# Allow finding services. This is different from ephemeral_app policy.
# Adding services manually to the allowlist is preferred hence app_api_service is not used.
allow supplemental_process activity_service:service_manager find;
allow supplemental_process activity_task_service:service_manager find;
allow supplemental_process audio_service:service_manager find;
# Audit the access to signal that we are still investigating whether supplemental_process
# should have access to audio_service
# TODO(b/211632068): remove this line
auditallow supplemental_process audio_service:service_manager find;
allow supplemental_process hint_service:service_manager find;
allow supplemental_process surfaceflinger_service:service_manager find;
allow supplemental_process trust_service:service_manager find;
allow supplemental_process uimode_service:service_manager find;
allow supplemental_process webviewupdate_service:service_manager find;

# Write app-specific trace data to the Perfetto traced damon. This requires
# connecting to its producer socket and obtaining a (per-process) tmpfs fd.
perfetto_producer(supplemental_process)

# Allow profiling if the app opts in by being marked profileable/debuggable.
can_profile_heap(supplemental_process)
can_profile_perf(supplemental_process)

# allow supplemental processes to use UDP sockets provided by the system server but not
# modify them other than to connect
allow supplemental_process system_server:udp_socket {
        connect getattr read recvfrom sendto write getopt setopt };

###
### neverallow rules
###

neverallow supplemental_process { app_data_file privapp_data_file }:file { execute execute_no_trans };

# Receive or send uevent messages.
neverallow supplemental_process domain:netlink_kobject_uevent_socket *;

# Receive or send generic netlink messages
neverallow supplemental_process domain:netlink_socket *;

# Too much leaky information in debugfs. It's a security
# best practice to ensure these files aren't readable.
neverallow supplemental_process debugfs:file read;

# execute gpu_device
neverallow supplemental_process gpu_device:chr_file execute;

# access files in /sys with the default sysfs label
neverallow supplemental_process sysfs:file *;

# Avoid reads from generically labeled /proc files
# Create a more specific label if needed
neverallow supplemental_process proc:file { no_rw_file_perms no_x_file_perms };

# Directly access external storage
neverallow supplemental_process { sdcard_type media_rw_data_file }:file {open create};
neverallow supplemental_process { sdcard_type media_rw_data_file }:dir search;

# Avoid reads to proc_net, it contains too much device wide information about
# ongoing connections.
neverallow supplemental_process proc_net:file no_rw_file_perms;

# Supplemental process doesn't have its own private app data directory
neverallow supplemental_process { app_data_file privapp_data_file }:dir no_rw_file_perms;
neverallow supplemental_process { app_data_file privapp_data_file }:file no_rw_file_perms;

# Supplemental process doesn't have any access to external storage
neverallow supplemental_process { media_rw_data_file }:dir no_rw_file_perms;
neverallow supplemental_process { media_rw_data_file }:file no_rw_file_perms;

neverallow { supplemental_process } tmpfs:dir no_rw_file_perms;
